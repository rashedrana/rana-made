pipeline goodsPipeline {
    goodsExtractor -> goodsInterpreter;

   goodsInterpreter
       -> goodsCSVInterpreter
       -> goodsMetaDataFooterDeleter
       -> timeTransportedGoodsHeaderWriter
       -> quantityGoodsHeaderWriter
       -> goodsTableInterpreter
       -> monthCapitalizer
       -> goodsLoader;


   block goodsExtractor oftype HttpExtractor {
       url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";
       retries: 3;
   }

   block goodsInterpreter oftype TextFileInterpreter {
       encoding: "latin3";
   }

   block goodsMetaDataFooterDeleter oftype RowDeleter {
       delete: [row 1, row 2, row 3, row 4, row 5, row 6, row 7, row 41337, row 41338, row 41339];
   }

   block timeTransportedGoodsHeaderWriter oftype CellWriter {
       at: range A1:E1;
       write: ["year", "month", "goods_id", "goods_name", "goods_source"];
   }

   block quantityGoodsHeaderWriter oftype CellWriter {
       at: range AT1:AU1;
       write: ["abroad", "total"];
   }

   constraint RegEx_1 oftype RegexConstraint {
       regex: /\b(Januar|Februar|März|April|Mai|Juni|Juli|August|September|Oktober|November|Dezember)\b/;
   }

   constraint RegEx_2 oftype RegexConstraint {
       regex: /^NST7-[0-9A-Z]{3}$/;
   }

   constraint RangeConst_1 oftype RangeConstraint {
       lowerBound: 0;
       lowerBoundInclusive: true;
   }

   valuetype MonthPattern oftype text {
       constraints: [RegEx_1,];
   }

   valuetype PositiveIntPattern oftype integer {
       constraints: [RangeConst_1,];
   }

   valuetype GoodIdPattern oftype text {
       constraints: [RegEx_2,];
   }

   transform capitalizeMonth {
       from prev oftype text;
       to new oftype text;

       new:  prev replace /Januar/ with 'JANUAR'
                 replace /Februar/ with 'FEBRUAR'
                 replace /März/ with 'MÄRZ'
                 replace /April/ with 'APRIL'
                 replace /Mai/ with 'MAI'
                 replace /Juni/ with 'JUNI'
                 replace /Juli/ with 'JULI'
                 replace /August/ with 'AUGUST'
                 replace /September/ with 'SEPTEMBER'
                 replace /Oktober/ with 'OKTOBER'
                 replace /November/ with 'NOVEMBER'
                 replace /Dezember/ with 'DEZEMBER';
   }

   block monthCapitalizer oftype TableTransformer {
       inputColumns: ["month"];
       outputColumn: "month";
       use: capitalizeMonth;
   }

   block goodsCSVInterpreter oftype CSVInterpreter {
       delimiter: ";";
       enclosing: '';
   }

   block goodsTableInterpreter oftype TableInterpreter {
       header: true;
       columns: [
           "year" oftype PositiveIntPattern,
           "month" oftype MonthPattern,
           "goods_id" oftype GoodIdPattern,
           "goods_name" oftype text,
           "goods_source" oftype text,
           "abroad" oftype PositiveIntPattern,
           "total" oftype PositiveIntPattern
       ];
   }

   block goodsLoader oftype SQLiteLoader {
       table: "goods";
       file: "./goodsTransportedByTrain.sqlite";
   }
}
